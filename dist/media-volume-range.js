import{Window as i}from"./utils/server-safe-globals.js";import u from"./media-chrome-range.js";import{defineCustomElement as l}from"./utils/defineCustomElement.js";import{MediaUIAttributes as e,MediaUIEvents as m}from"./constants.js";import{nouns as d}from"./labels/labels.js";const c=100,E=s=>{var r;if(s.getAttribute(e.MEDIA_MUTED)!=null)return 0;const n=+((r=s.getAttribute(e.MEDIA_VOLUME))!=null?r:1);return Math.round(n*s.range.max)},b=({value:s,max:t})=>`${Math.round(s/t*100)}%`;class a extends u{static get observedAttributes(){return[...super.observedAttributes,e.MEDIA_VOLUME,e.MEDIA_MUTED]}constructor(){super();this.range.max=c,this.range.addEventListener("input",()=>{const n=this.range.value/this.range.max,r=new i.CustomEvent(m.MEDIA_VOLUME_REQUEST,{composed:!0,bubbles:!0,detail:n});this.dispatchEvent(r)})}connectedCallback(){this.range.setAttribute("aria-label",d.VOLUME()),this.setAttribute(e.MEDIA_CHROME_ATTRIBUTES,this.constructor.observedAttributes.join(" ")),super.connectedCallback()}attributeChangedCallback(t,n,r){if(t===e.MEDIA_VOLUME||t===e.MEDIA_MUTED){const o=E(this);this.range.value=o,this.range.setAttribute("aria-valuetext",b(this.range)),this.updateBar()}super.attributeChangedCallback(t,n,r)}}l("media-volume-range",a);export default a;
